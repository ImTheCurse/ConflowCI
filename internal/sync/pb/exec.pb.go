// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: sync/exec.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskFileFinder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pattern       string                 `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	BuildDir      string                 `protobuf:"bytes,2,opt,name=build_dir,json=buildDir,proto3" json:"build_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskFileFinder) Reset() {
	*x = TaskFileFinder{}
	mi := &file_sync_exec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskFileFinder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFileFinder) ProtoMessage() {}

func (x *TaskFileFinder) ProtoReflect() protoreflect.Message {
	mi := &file_sync_exec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFileFinder.ProtoReflect.Descriptor instead.
func (*TaskFileFinder) Descriptor() ([]byte, []int) {
	return file_sync_exec_proto_rawDescGZIP(), []int{0}
}

func (x *TaskFileFinder) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *TaskFileFinder) GetBuildDir() string {
	if x != nil {
		return x.BuildDir
	}
	return ""
}

type FileList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []string               `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileList) Reset() {
	*x = FileList{}
	mi := &file_sync_exec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileList) ProtoMessage() {}

func (x *FileList) ProtoReflect() protoreflect.Message {
	mi := &file_sync_exec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileList.ProtoReflect.Descriptor instead.
func (*FileList) Descriptor() ([]byte, []int) {
	return file_sync_exec_proto_rawDescGZIP(), []int{1}
}

func (x *FileList) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

var File_sync_exec_proto protoreflect.FileDescriptor

const file_sync_exec_proto_rawDesc = "" +
	"\n" +
	"\x0fsync/exec.proto\x12\x04sync\"G\n" +
	"\x0eTaskFileFinder\x12\x18\n" +
	"\apattern\x18\x01 \x01(\tR\apattern\x12\x1b\n" +
	"\tbuild_dir\x18\x02 \x01(\tR\bbuildDir\" \n" +
	"\bFileList\x12\x14\n" +
	"\x05files\x18\x01 \x03(\tR\x05files2H\n" +
	"\rFileExtractor\x127\n" +
	"\x0fGetFilesByRegex\x12\x14.sync.TaskFileFinder\x1a\x0e.sync.FileListB2Z0github.com/ImTheCurse/ConflowCI/internal/sync/pbb\x06proto3"

var (
	file_sync_exec_proto_rawDescOnce sync.Once
	file_sync_exec_proto_rawDescData []byte
)

func file_sync_exec_proto_rawDescGZIP() []byte {
	file_sync_exec_proto_rawDescOnce.Do(func() {
		file_sync_exec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sync_exec_proto_rawDesc), len(file_sync_exec_proto_rawDesc)))
	})
	return file_sync_exec_proto_rawDescData
}

var file_sync_exec_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sync_exec_proto_goTypes = []any{
	(*TaskFileFinder)(nil), // 0: sync.TaskFileFinder
	(*FileList)(nil),       // 1: sync.FileList
}
var file_sync_exec_proto_depIdxs = []int32{
	0, // 0: sync.FileExtractor.GetFilesByRegex:input_type -> sync.TaskFileFinder
	1, // 1: sync.FileExtractor.GetFilesByRegex:output_type -> sync.FileList
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sync_exec_proto_init() }
func file_sync_exec_proto_init() {
	if File_sync_exec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sync_exec_proto_rawDesc), len(file_sync_exec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sync_exec_proto_goTypes,
		DependencyIndexes: file_sync_exec_proto_depIdxs,
		MessageInfos:      file_sync_exec_proto_msgTypes,
	}.Build()
	File_sync_exec_proto = out.File
	file_sync_exec_proto_goTypes = nil
	file_sync_exec_proto_depIdxs = nil
}
