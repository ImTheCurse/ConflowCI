// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/provider/provider.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dir           string                 `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
	CloneUrl      string                 `protobuf:"bytes,3,opt,name=clone_url,json=cloneUrl,proto3" json:"clone_url,omitempty"`
	BranchRef     string                 `protobuf:"bytes,4,opt,name=branch_ref,json=branchRef,proto3" json:"branch_ref,omitempty"`
	BranchName    string                 `protobuf:"bytes,5,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	RemoteOrigin  string                 `protobuf:"bytes,6,opt,name=remote_origin,json=remoteOrigin,proto3" json:"remote_origin,omitempty"`
	Token         string                 `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	mi := &file_proto_provider_provider_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_provider_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_proto_provider_provider_proto_rawDescGZIP(), []int{0}
}

func (x *SyncRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SyncRequest) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *SyncRequest) GetCloneUrl() string {
	if x != nil {
		return x.CloneUrl
	}
	return ""
}

func (x *SyncRequest) GetBranchRef() string {
	if x != nil {
		return x.BranchRef
	}
	return ""
}

func (x *SyncRequest) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *SyncRequest) GetRemoteOrigin() string {
	if x != nil {
		return x.RemoteOrigin
	}
	return ""
}

func (x *SyncRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Output        string                 `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Error         *SyncError             `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	mi := &file_proto_provider_provider_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_provider_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_proto_provider_provider_proto_rawDescGZIP(), []int{1}
}

func (x *SyncResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *SyncResponse) GetError() *SyncError {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkTreeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RepoDir         string                 `protobuf:"bytes,2,opt,name=repo_dir,json=repoDir,proto3" json:"repo_dir,omitempty"`
	BranchName      string                 `protobuf:"bytes,3,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	WorktreeRelPath string                 `protobuf:"bytes,4,opt,name=worktree_rel_path,json=worktreeRelPath,proto3" json:"worktree_rel_path,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WorkTreeRequest) Reset() {
	*x = WorkTreeRequest{}
	mi := &file_proto_provider_provider_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkTreeRequest) ProtoMessage() {}

func (x *WorkTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_provider_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkTreeRequest.ProtoReflect.Descriptor instead.
func (*WorkTreeRequest) Descriptor() ([]byte, []int) {
	return file_proto_provider_provider_proto_rawDescGZIP(), []int{2}
}

func (x *WorkTreeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkTreeRequest) GetRepoDir() string {
	if x != nil {
		return x.RepoDir
	}
	return ""
}

func (x *WorkTreeRequest) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *WorkTreeRequest) GetWorktreeRelPath() string {
	if x != nil {
		return x.WorktreeRelPath
	}
	return ""
}

type SyncError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncError) Reset() {
	*x = SyncError{}
	mi := &file_proto_provider_provider_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncError) ProtoMessage() {}

func (x *SyncError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_provider_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncError.ProtoReflect.Descriptor instead.
func (*SyncError) Descriptor() ([]byte, []int) {
	return file_proto_provider_provider_proto_rawDescGZIP(), []int{3}
}

func (x *SyncError) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_proto_provider_provider_proto protoreflect.FileDescriptor

const file_proto_provider_provider_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/provider/provider.proto\x12\bprovider\"\xcb\x01\n" +
	"\vSyncRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03dir\x18\x02 \x01(\tR\x03dir\x12\x1b\n" +
	"\tclone_url\x18\x03 \x01(\tR\bcloneUrl\x12\x1d\n" +
	"\n" +
	"branch_ref\x18\x04 \x01(\tR\tbranchRef\x12\x1f\n" +
	"\vbranch_name\x18\x05 \x01(\tR\n" +
	"branchName\x12#\n" +
	"\rremote_origin\x18\x06 \x01(\tR\fremoteOrigin\x12\x14\n" +
	"\x05token\x18\a \x01(\tR\x05token\"Q\n" +
	"\fSyncResponse\x12\x16\n" +
	"\x06output\x18\x01 \x01(\tR\x06output\x12)\n" +
	"\x05error\x18\x02 \x01(\v2\x13.provider.SyncErrorR\x05error\"\x8d\x01\n" +
	"\x0fWorkTreeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\brepo_dir\x18\x02 \x01(\tR\arepoDir\x12\x1f\n" +
	"\vbranch_name\x18\x03 \x01(\tR\n" +
	"branchName\x12*\n" +
	"\x11worktree_rel_path\x18\x04 \x01(\tR\x0fworktreeRelPath\"#\n" +
	"\tSyncError\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason2\x8e\x02\n" +
	"\x12RepositoryProvider\x126\n" +
	"\x05Clone\x12\x15.provider.SyncRequest\x1a\x16.provider.SyncResponse\x126\n" +
	"\x05Fetch\x12\x15.provider.SyncRequest\x1a\x16.provider.SyncResponse\x12C\n" +
	"\x0eCreateWorkTree\x12\x19.provider.WorkTreeRequest\x1a\x16.provider.SyncResponse\x12C\n" +
	"\x0eRemoveWorkTree\x12\x19.provider.WorkTreeRequest\x1a\x16.provider.SyncResponseB6Z4github.com/ImTheCurse/ConflowCI/internal/provider/pbb\x06proto3"

var (
	file_proto_provider_provider_proto_rawDescOnce sync.Once
	file_proto_provider_provider_proto_rawDescData []byte
)

func file_proto_provider_provider_proto_rawDescGZIP() []byte {
	file_proto_provider_provider_proto_rawDescOnce.Do(func() {
		file_proto_provider_provider_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_provider_provider_proto_rawDesc), len(file_proto_provider_provider_proto_rawDesc)))
	})
	return file_proto_provider_provider_proto_rawDescData
}

var file_proto_provider_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_provider_provider_proto_goTypes = []any{
	(*SyncRequest)(nil),     // 0: provider.SyncRequest
	(*SyncResponse)(nil),    // 1: provider.SyncResponse
	(*WorkTreeRequest)(nil), // 2: provider.WorkTreeRequest
	(*SyncError)(nil),       // 3: provider.SyncError
}
var file_proto_provider_provider_proto_depIdxs = []int32{
	3, // 0: provider.SyncResponse.error:type_name -> provider.SyncError
	0, // 1: provider.RepositoryProvider.Clone:input_type -> provider.SyncRequest
	0, // 2: provider.RepositoryProvider.Fetch:input_type -> provider.SyncRequest
	2, // 3: provider.RepositoryProvider.CreateWorkTree:input_type -> provider.WorkTreeRequest
	2, // 4: provider.RepositoryProvider.RemoveWorkTree:input_type -> provider.WorkTreeRequest
	1, // 5: provider.RepositoryProvider.Clone:output_type -> provider.SyncResponse
	1, // 6: provider.RepositoryProvider.Fetch:output_type -> provider.SyncResponse
	1, // 7: provider.RepositoryProvider.CreateWorkTree:output_type -> provider.SyncResponse
	1, // 8: provider.RepositoryProvider.RemoveWorkTree:output_type -> provider.SyncResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_provider_provider_proto_init() }
func file_proto_provider_provider_proto_init() {
	if File_proto_provider_provider_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_provider_provider_proto_rawDesc), len(file_proto_provider_provider_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_provider_provider_proto_goTypes,
		DependencyIndexes: file_proto_provider_provider_proto_depIdxs,
		MessageInfos:      file_proto_provider_provider_proto_msgTypes,
	}.Build()
	File_proto_provider_provider_proto = out.File
	file_proto_provider_provider_proto_goTypes = nil
	file_proto_provider_provider_proto_depIdxs = nil
}
